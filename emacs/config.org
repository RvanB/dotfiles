#+TITLE: Emacs Configuration
#+AUTHOR: Raiden van Bronkhorst
#+OPTIONS: toc:nil num:nil
#+PROPERTY: header-args :results none

* Setup Package Archives
  #+BEGIN_SRC emacs-lisp
    (require 'package)
    (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
    (package-refresh-contents)  ;; Refresh package contents
  #+END_SRC

* Install Packages
  #+BEGIN_SRC emacs-lisp
    (dolist (pkg '(vertico orderless embark savehist expand-region hungry-delete
                           which-key vterm vterm-toggle company annotate magit rainbow-delimiters
                           git-gutter modus-themes org-bullets marginalia golden-ratio-scroll-screen))
      (unless (package-installed-p pkg)
        (package-install pkg)))
  #+END_SRC

* Configure Packages
** Vertico
   #+BEGIN_SRC emacs-lisp
     (require 'vertico)
     (vertico-mode)
     (setq vertico-cycle t)
   #+END_SRC

** Orderless Completion Style
   #+BEGIN_SRC emacs-lisp
     (setq completion-styles '(orderless basic))
     (setq completion-category-defaults nil)
     (setq completion-category-overrides '((file (styles partial-completion))))
   #+END_SRC

** Embark
   #+BEGIN_SRC emacs-lisp
     (require 'embark)
     (global-set-key (kbd "C-.") 'embark-act)
   #+END_SRC

** Save History
   #+BEGIN_SRC emacs-lisp
     (require 'savehist)
     (savehist-mode)
   #+END_SRC

** Expand Region
   #+BEGIN_SRC emacs-lisp
     (require 'expand-region)
     (global-set-key (kbd "C-=") 'er/expand-region)
   #+END_SRC

** Hungry Delete
   #+BEGIN_SRC emacs-lisp
     (require 'hungry-delete)
     (global-hungry-delete-mode)
   #+END_SRC

** Which-key
   #+BEGIN_SRC emacs-lisp
     (require 'which-key)
     (which-key-mode)
   #+END_SRC

** Vterm
   #+BEGIN_SRC emacs-lisp
     (require 'vterm)

     ;; vterm toggle
     (require 'vterm-toggle)
     (keymap-global-set "<f2>" 'vterm-toggle)
     (keymap-set vterm-mode-map "C-<return>" 'vterm-toggle-insert-cd)
     (keymap-unset vterm-mode-map "<f2>" t)
   #+END_SRC

** Company
   #+BEGIN_SRC emacs-lisp
     (require 'company)
     (global-company-mode)
   #+END_SRC

** Annotate
   #+BEGIN_SRC emacs-lisp
     (require 'annotate)
     (add-hook 'prog-mode-hook 'annotate-mode)
   #+END_SRC

** Magit
   #+BEGIN_SRC emacs-lisp
     (require 'magit)
   #+END_SRC

** Rainbow Delimiters
   #+BEGIN_SRC emacs-lisp
     (require 'rainbow-delimiters)
     (add-hook 'prog-mode-hook #'rainbow-delimiters-mode)
   #+END_SRC

* UI Tweaks
  #+BEGIN_SRC emacs-lisp
    (scroll-bar-mode -1)
    (tool-bar-mode -1)
  #+END_SRC

* Theme Settings
  #+BEGIN_SRC emacs-lisp
    (require 'modus-themes)
    (setq modus-themes-bold-constructs t)
    (setq modus-themes-italic-constructs t)
    (load-theme 'modus-vivendi t)
  #+END_SRC

* Misc Settings
  #+BEGIN_SRC emacs-lisp
    (setq ring-bell-function 'ignore)
    (setq org-adapt-indentation t)
    (setq org-html-validation-link nil)
    (setq default-cursor-type 'bar)
    (setq scroll-margin 10
          scroll-conservatively 101
          scroll-up-aggressively 0.01
          scroll-down-aggressively 0.01
          scroll-preserve-screen-position t
          auto-window-vscroll nil)
    (setq make-backup-files nil)
    (setq vc-follow-symlinks t)
    (setq split-width-threshold 1)
    (setq isearch-lazy-count t)
    (setq lazy-count-prefix-format "(%s/%s) ")
    (setq lazy-count-suffix-format nil)
    (setq search-whitespace-regexp ".*?")
    (setq python-shell-completion-native-enable nil)
  #+END_SRC

* Enable Golden Ratio Scroll Screen
  #+BEGIN_SRC emacs-lisp
    (require 'golden-ratio-scroll-screen)
    (setq golden-ratio-scroll-highlight-flag nil)
    (global-set-key [remap scroll-down-command] 'golden-ratio-scroll-screen-down)
    (global-set-key [remap scroll-up-command] 'golden-ratio-scroll-screen-up)
  #+END_SRC

* Auto-revert
  #+BEGIN_SRC emacs-lisp
    (global-auto-revert-mode t)
  #+END_SRC

* Hooks
  #+BEGIN_SRC emacs-lisp
    (add-hook 'prog-mode-hook 'display-line-numbers-mode)
    (add-hook 'prog-mode-hook #'hl-line-mode)
    (add-hook 'text-mode-hook #'hl-line-mode)
  #+END_SRC

* Org Mode Setup
  #+BEGIN_SRC emacs-lisp
    (require 'org-bullets)
    (add-hook 'org-mode-hook (lambda () (org-bullets-mode 1)))
    (setq org-adapt-indentation t)
    (setq org-html-validation-link nil)
  #+END_SRC

* Marginalia
  #+BEGIN_SRC emacs-lisp
    (require 'marginalia)
    (global-set-key (kbd "M-A") 'marginalia-cycle)
    (marginalia-mode)
  #+END_SRC

* Back to Indentation or Beginning of Line
  #+BEGIN_SRC emacs-lisp
    (defun back-to-indentation-or-beginning ()
      (interactive)
      (if (= (point) (progn (back-to-indentation) (point)))
          (beginning-of-line)))
    (global-set-key [remap move-beginning-of-line] 'back-to-indentation-or-beginning)
    (global-set-key [remap org-beginning-of-line] 'back-to-indentation-or-beginning)
  #+END_SRC
