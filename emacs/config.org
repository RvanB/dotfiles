#+TITLE: Emacs Configuration
#+AUTHOR: Raiden van Bronkhorst
#+STARTUP: overview
#+OPTIONS: toc:nil

* Repos and main setup
** Set up package.el to work with MELPA
#+begin_src emacs-lisp
  
(require 'package)
(add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/"))
(package-refresh-contents t)
#+end_src

** Initialize use-package
#+begin_src emacs-lisp
(unless (package-installed-p 'use-package)
  (package-install 'use-package))
#+end_src

** Always ensure packages
#+begin_src emacs-lisp
(require 'use-package-ensure)
(setq use-package-always-ensure t)
#+end_src

** Use shell environment variables
#+begin_src emacs-lisp
(use-package exec-path-from-shell)
(when (memq window-system '(mac ns x))
  (exec-path-from-shell-initialize))  
#+end_src

* COMMENT Keybindings
#+begin_src emacs-lisp
(use-package general
  :config
  (general-create-definer rvb/leader-keys
    :keymaps '(normal insert visual emacs)
    :prefix "SPC"
    :global-prefix "C-SPC")

  (rvb/leader-keys
    "k"  'kill-buffer
    ;;"f"  'helm-projectile-find-file
    ;;"s"  'helm-ag
    ;;"p"  'helm-projectile-switch-project
    "t"  'eshell-toggle
    ;;"e"  'conda-env-activate
    ;;"r"  'helm-resume
    "c"  'comment-or-uncomment-region
  ))
#+end_src

* Projectile
#+begin_src emacs-lisp
  (use-package projectile
    ;;:ensure t
    :init
    (setq projectile-switch-project-action 'counsel-git)
    ;;(setq projectile-switch-project-action 'helm-projectile-find-file)
    (projectile-mode +1)
    :bind (:map projectile-mode-map
		("s-p" . projectile-command-map)
		("C-c p" . projectile-command-map)))
#+end_src

* COMMENT Vertico/ Consult
** Vertico
#+begin_src emacs-lisp
  (use-package vertico
    :custom
    (vertico-cycle t)
    :init
    (vertico-mode)
  )
#+end_src

* Ivy

#+begin_src emacs-lisp
  (use-package ivy
    :init
    (ivy-mode)
    :config
    (global-set-key "\C-s" 'swiper)
    (global-set-key (kbd "C-c C-r") 'ivy-resume)
    (global-set-key (kbd "C-x C-f") 'counsel-find-file)
    (global-set-key (kbd "C-c g") 'counsel-git)
    (global-set-key (kbd "C-c j") 'counsel-git-grep)
    (global-set-key (kbd "C-c k") 'counsel-ag)
    )
#+end_src

* Org
** Set agenda files
#+begin_src emacs-lisp
  (setq org-agenda-files '("~/docs/tasks.org"))
#+end_src
** Open todo list on open
#+begin_src emacs-lisp
  (setq inhibit-splash-screen t)
  (org-todo-list)
#+end_src
* Appearance
** COMMENT Git gutter
#+begin_src emacs-lisp
(use-package git-gutter
   :config
   (global-git-gutter-mode +1)
   )
#+end_src

** COMMENT Beacon
#+begin_src emacs-lisp
  (use-package beacon
    :ensure t
    :config
    (progn
      (beacon-mode 1)
      ;;(setq beacon-push-mark 35)
      ;;(setq beacon-blink-when-point-moves-vertically 10)
      (setq beacon-color "#666600")))
#+end_src

** COMMENT Change theme
*** COMMENT Modus Themes
#+begin_src emacs-lisp
(use-package modus-themes)
(setq modus-themes-bold-constructs t)
(setq modus-themes-italic-constructs t)
(setq modus-themes-mode-line '(3d))
(load-theme 'modus-operandi t)
#+end_src

*** COMMENT Leuven
#+begin_src emacs-lisp
  (load-theme 'leuven t)
#+end_src

*** COMMENT Zenburn
#+begin_src emacs-lisp
  (use-package zenburn-theme
    :config
    (load-theme 'zenburn t))
#+end_src

** COMMENT Change Font
#+begin_src emacs-lisp
(set-face-font 'default "MonoLisa 12" nil)
#+end_src

** Disable bell
#+begin_src emacs-lisp
(setq ring-bell-function 'ignore)
#+end_src

** Scrolling

#+begin_src emacs-lisp
  (setq scroll-margin 10
	scroll-conservatively 101
	scroll-up-aggressively 0.01
	scroll-down-aggressively 0.01
	scroll-preserve-screen-position t
	auto-window-vscroll nil)
#+end_src

** Modes and variables

*** Highlighted current line
#+begin_src emacs-lisp
;; let's enable it for all programming major modes
(add-hook 'prog-mode-hook #'hl-line-mode)
;; and for all modes derived from text-mode
(add-hook 'text-mode-hook #'hl-line-mode)
#+end_src

*** Other
#+begin_src emacs-lisp
  ;;(global-display-line-numbers-mode 1)
  ;;(scroll-bar-mode -1)
  (set-default 'truncate-lines t)
  (global-auto-revert-mode t)

  (tool-bar-mode -1)
#+end_src

* General Settings and Behavior
** Disable backup files
#+begin_src emacs-lisp
(setq make-backup-files nil)
#+end_src

** Golden Ratio scrolling
#+begin_src emacs-lisp
  (use-package golden-ratio-scroll-screen
    :init
    (setq golden-ratio-scroll-highlight-flag nil)
    :config
    (global-set-key [remap scroll-down-command] 'golden-ratio-scroll-screen-down)
    (global-set-key [remap scroll-up-command] 'golden-ratio-scroll-screen-up)
  )
#+end_src
** Follow symlinks
#+begin_src emacs-lisp
(setq vc-follow-symlinks t)
#+end_src

